// Generated by gencpp from file controller/interface.msg
// DO NOT EDIT!


#ifndef CONTROLLER_MESSAGE_INTERFACE_H
#define CONTROLLER_MESSAGE_INTERFACE_H

#include <ros/service_traits.h>


#include <controller/interfaceRequest.h>
#include <controller/interfaceResponse.h>


namespace controller
{

struct interface
{

typedef interfaceRequest Request;
typedef interfaceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct interface
} // namespace controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::controller::interface > {
  static const char* value()
  {
    return "6a2e34150c00229791cc89ff309fff21";
  }

  static const char* value(const ::controller::interface&) { return value(); }
};

template<>
struct DataType< ::controller::interface > {
  static const char* value()
  {
    return "controller/interface";
  }

  static const char* value(const ::controller::interface&) { return value(); }
};


// service_traits::MD5Sum< ::controller::interfaceRequest> should match 
// service_traits::MD5Sum< ::controller::interface > 
template<>
struct MD5Sum< ::controller::interfaceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::controller::interface >::value();
  }
  static const char* value(const ::controller::interfaceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::controller::interfaceRequest> should match 
// service_traits::DataType< ::controller::interface > 
template<>
struct DataType< ::controller::interfaceRequest>
{
  static const char* value()
  {
    return DataType< ::controller::interface >::value();
  }
  static const char* value(const ::controller::interfaceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::controller::interfaceResponse> should match 
// service_traits::MD5Sum< ::controller::interface > 
template<>
struct MD5Sum< ::controller::interfaceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::controller::interface >::value();
  }
  static const char* value(const ::controller::interfaceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::controller::interfaceResponse> should match 
// service_traits::DataType< ::controller::interface > 
template<>
struct DataType< ::controller::interfaceResponse>
{
  static const char* value()
  {
    return DataType< ::controller::interface >::value();
  }
  static const char* value(const ::controller::interfaceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CONTROLLER_MESSAGE_INTERFACE_H
